\relax 
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces  Coin model results with true $H = 0.38$, $n = 10$ coin tosses, an uniform prior, and a needlessly long $l = 10,000$ step chain. Since ten coin tosses is a very small dataset, the trace oscillates a lot, and the 95\% confidence interval is large. }}{1}}
\newlabel{pheads_10_10k_u.png}{{1}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Coin tossing}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  Coin model results with true $H = 0.38$, $n = 1000$ coin tosses, an uniform prior, and a needlessly long $l = 10,000$ step chain. The larger dataset than in Figure 1\hbox {} makes the confidence interval much narrower. The trace oscillation amplitude is much smaller, and the histogram shows a narrower peak. }}{2}}
\newlabel{pheads_1k_10k_u.png}{{2}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces  Coin model results with true $H = 0.38$, $n = 1000$ coin tosses, a wide Gaussian prior ($\mu = 0.5, \sigma = 0.2$), and a needlessly long $l = 10,000$ step chain. With 1000 tosses, the results from the data dominate over the effects from the prior. }}{2}}
\newlabel{pheads_1k_10k_wg.png}{{3}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces  Coin model results with true $H = 0.38$, $n = 1000$ coin tosses, a narrow Gaussian prior ($\mu = 0.5, \sigma = 0.05$), and a needlessly long $l = 10,000$ step chain. With 1000 tosses, the results from the data dominate over the effects from the prior -- despite the intial narrowness of the peak. The trace shows that the algorithm starts near $H = 0.5$ but almost immediately reaches the desired region. }}{3}}
\newlabel{pheads_1k_10k_ng.png}{{4}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Lighthouse problem}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces  Lighthouse model results with true $(\alpha , \beta ) = (1.0, 1.5)$, $n = 10000$ lighthouse flashes (so roughly 5000 data points on the shore), and a chain length of $l = 100$. The traces converge quickly -- both are quite good by the 30th step. The \texttt  {pymc} implementation of MCMC does not allow chain lengths of less than 100. }}{4}}
\newlabel{alpha_100.png}{{5}{4}}
